{"version":3,"file":"renderChallenges-mTvZiHMJ.js","sources":["../../src/js/menu.js","../../src/js/apiService.js","../../src/js/apiTest.js","../../src/js/modal-step-2.js","../../src/js/modal1.js","../../src/js/challengeClass.js","../../src/js/utilities/renderChallenges.js"],"sourcesContent":["import '../styles/layouts/header.scss';\r\n\r\nconst menuItems = [\r\n  { name: 'Play online', href: '#onLine' },\r\n  { name: 'Play on-site', href: '#onSite' },\r\n  { name: 'The story', href: '#story' },\r\n  { name: 'Contact us', href: '#contact' },\r\n];\r\n\r\n//referenses\r\nconst hamburger = document.querySelector('.nav__hamburger');\r\nconst menu = document.querySelector('.nav__menu');\r\nconst backgroundOverlay = document.querySelector('.nav__background');\r\n\r\n//creation of components\r\nconst createNavMenuItem = () => {\r\n  menuItems.forEach((item) => {\r\n    const menuList = document.createElement('li');\r\n    menuList.classList.add('nav__menuItem');\r\n\r\n    const link = document.createElement('a');\r\n    link.href = item.href;\r\n    link.textContent = item.name;\r\n    link.classList.add('nav__menuLink');\r\n\r\n    menuList.appendChild(link);\r\n    menu.appendChild(menuList);\r\n  });\r\n};\r\n\r\nconst createCloseBtn = () => {\r\n  const closeBtn = document.createElement('button');\r\n  closeBtn.classList.add('nav__menu__closeBtn');\r\n\r\n  const span1 = document.createElement('span');\r\n  span1.classList.add('closeSpan1');\r\n\r\n  const span2 = document.createElement('span');\r\n  span2.classList.add('closeSpan2');\r\n\r\n  closeBtn.appendChild(span1);\r\n  closeBtn.appendChild(span2);\r\n  menu.appendChild(closeBtn);\r\n  return closeBtn;\r\n};\r\n\r\nconst closeBtn = createCloseBtn();\r\ncreateNavMenuItem();\r\n\r\n// handels management\r\n\r\nconst handleToggleMenu = () => {\r\n  setTimeout(() => {\r\n    menu.classList.toggle('nav__menu--active');\r\n  }, 200);\r\n  backgroundOverlay.classList.toggle('nav__background--active');\r\n};\r\n\r\nconst handleCloseMenu = () => {\r\n  menu.classList.remove('nav__menu--active');\r\n  backgroundOverlay.classList.remove('nav__background--active');\r\n};\r\n\r\n// eventListener\r\nhamburger.addEventListener('click', handleToggleMenu);\r\nmenu.addEventListener('click', (e) => {\r\n  if (e.target.classList.contains('nav__menuLink')) {\r\n    handleCloseMenu();\r\n  }\r\n});\r\ncloseBtn.addEventListener('click', handleCloseMenu);\r\nwindow.addEventListener('scroll', handleCloseMenu);\r\n\r\n// Redirection from index.html to challenges.html with prefiltered results for online/onsite challenges\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const onlineButton = document.querySelector('.main__btn.online');\r\n  const onsiteButton = document.querySelector('.main__btn.onsite');\r\n\r\n  onlineButton.addEventListener('click', () => {\r\n    window.location.href = 'challenges.html?type=online';\r\n  });\r\n\r\n  onsiteButton.addEventListener('click', () => {\r\n    window.location.href = 'challenges.html?type=onsite';\r\n  });\r\n  \r\n});\r\n","const BASE_URL = 'https://lernia-sjj-assignments.vercel.app/api';\r\n\r\n// Helper function to validate date format (YYYY-MM-DD)\r\nexport const isValidDate= (dateString) => {\r\n  const regex = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\r\n  if (!regex.test(dateString)) return false;\r\n\r\n  // Further validate logical date correctness\r\n  const date = new Date(dateString);\r\n  return date instanceof Date && !isNaN(date);\r\n}\r\n\r\n\r\n// Helper function to validate time format (HH:mm)\r\nexport const isValidTime = (timeString) => {\r\n  // Regular expression to strictly match valid time formats\r\n  const regex = /^(?:[01]\\d|2[0-3]):[0-5]\\d$/;\r\n  return regex.test(timeString);\r\n}\r\n\r\nexport const isDateAtLeastTomorrow = (dateString) => {\r\n  const today = new Date();\r\n  today.setUTCHours(0, 0, 0, 0); \r\n  const tomorrow = new Date(today);\r\n  tomorrow.setUTCDate(today.getUTCDate() + 1); \r\n  const inputDate = new Date(dateString);\r\n\r\n  return inputDate >= tomorrow; \r\n};\r\n\r\n\r\n// Helper function for a simple input validation\r\nexport const validateReservationInput = ({\r\n  challengeId,\r\n  name,\r\n  email,\r\n  date,\r\n  time,\r\n  participants,\r\n}) => {\r\n  if (\r\n    typeof challengeId !== 'number' ||\r\n    typeof name !== 'string' ||\r\n    typeof email !== 'string' ||\r\n    typeof date !== 'string' ||\r\n    typeof time !== 'string' ||\r\n    typeof participants !== 'number'\r\n  ) {\r\n    console.log('Invalid parameter/s: ', {\r\n      challengeId,\r\n      name,\r\n      email,\r\n      date,\r\n      time,\r\n      participants,\r\n    });\r\n    return false;\r\n  }\r\n  if (!isValidDate(date)) {\r\n    console.log(\"Invalid 'date': Must be in YYYY-MM-DD format.\");\r\n    return false;\r\n  }\r\n  if (!isDateAtLeastTomorrow(date)) {\r\n    console.log(\"Invalid 'date': Booking must be at least tomorrow or later.\");\r\n    return false;\r\n  }\r\n  if (!isValidTime(time)) {\r\n    console.log(\"Invalid 'time': Must be in HH:mm format.\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n//API Services:\r\n\r\n// Generalized fetch function that accepts options and throws errors for critical issues\r\nconst fetchApi = async (url, requestOptions = {}) => {\r\n  try {\r\n    const res = await fetch(url, requestOptions);\r\n    if (!res.ok) {\r\n      const errorText = await res.text();\r\n      console.log(`Error response from ${url}:`, errorText);\r\n      throw new Error(\r\n        `HTTP error! status: ${res.status}, message: ${errorText}`,\r\n      );\r\n    }\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.log(`Error fetching data from ${url}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch all challenges\r\nexport const fetchAllChallenges = async () => {\r\n  try {\r\n    const { challenges } = await fetchApi(`${BASE_URL}/challenges`);\r\n    console.log('Challenges:', challenges);\r\n    return { success: true, data: challenges ?? [] };\r\n  } catch (error) {\r\n    return { success: false, data: [], error: error.message };\r\n  }\r\n};\r\n\r\n// Fetch available times per a date\r\nexport const fetchAvailableTimes = async (challengeId, date) => {\r\n  if (typeof challengeId !== 'number' || typeof date !== 'string') {\r\n    console.log('Invalid parameters:', { challengeId, date });\r\n    return { success: false, data: [], error: 'Invalid parameters' };\r\n  }\r\n\r\n  try {\r\n    const { slots } = await fetchApi(\r\n      `${BASE_URL}/booking/available-times?date=${date}&challenge=${challengeId}`,\r\n    );\r\n    console.log('Available slots:', slots);\r\n    return { success: true, data: slots ?? [] };\r\n  } catch (error) {\r\n    return { success: false, data: [], error: error.message };\r\n  }\r\n};\r\n\r\nexport const fetchChallengeDetails = async (challengeId) => {\r\n  try {\r\n    // Fetch all challenges\r\n    const { success, data: challenges, error } = await fetchAllChallenges();\r\n    if (!success) {\r\n      console.error('Failed to fetch challenges:', error);\r\n      return { success: false, data: null, error };\r\n    }\r\n\r\n    // Find the challenge by ID\r\n    const challengeDetails = challenges.find(\r\n      (challenge) => challenge.id === challengeId,\r\n    );\r\n\r\n    if (!challengeDetails) {\r\n      console.error(`Challenge with ID ${challengeId} not found.`);\r\n      return { success: false, data: null, error: 'Challenge not found' };\r\n    }\r\n\r\n    console.log('Found challenge details:', challengeDetails);\r\n    return { success: true, data: challengeDetails };\r\n  } catch (err) {\r\n    console.error('Error finding challenge details:', err);\r\n    return { success: false, data: null, error: err.message };\r\n  }\r\n};\r\n\r\n// Create reservation with  simple input validation\r\nexport const createReservation = async (reservationData) => {\r\n  if (!validateReservationInput(reservationData)) {\r\n    return { success: false, error: 'Invalid input data' };\r\n  }\r\n\r\n  try {\r\n    const res = await fetchApi(`${BASE_URL}/booking/reservations`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        challenge: reservationData.challengeId,\r\n        name: reservationData.name,\r\n        email: reservationData.email,\r\n        date: reservationData.date,\r\n        time: reservationData.time,\r\n        participants: reservationData.participants,\r\n      }),\r\n    });\r\n\r\n    if (res?.status === 'ok') {\r\n      console.log('Booking successful:', res);\r\n      return { success: true, data: res.booking };\r\n    } else {\r\n      return { success: false, error: 'Reservation failed' };\r\n    }\r\n  } catch (error) {\r\n    console.log('Error in creating reservation:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n","import {\r\n  fetchAllChallenges,\r\n  fetchAvailableTimes,\r\n  fetchChallengeDetails,\r\n  createReservation,\r\n} from './apiService.js';\r\nfetchAllChallenges();\r\nfetchAvailableTimes(3, '2024-12-12');\r\nfetchChallengeDetails(3);\r\nfetchChallengeDetails(3);\r\ncreateReservation({\r\n  challengeId: 3,\r\n  name: 'Elena',\r\n  email: 'elena@elena.com',\r\n  date: '2025-12-12',\r\n  time: '15:30',\r\n  participants: 2,\r\n});\r\n","import '../styles/layouts/modal.scss';\r\nimport {\r\n  fetchAvailableTimes,\r\n  fetchChallengeDetails,\r\n  createReservation,\r\n} from './apiService.js';\r\nimport { showSteps } from './modal1.js';\r\n\r\n// DOM Elements\r\nconst emailInput = document.querySelector('#booking-email');\r\nconst nameInput = document.querySelector('#booking-name');\r\nconst timeDropdown = document.querySelector('#booking-time');\r\nconst participantsDropdown = document.querySelector('#booking-participants');\r\nconst form = document.querySelector('#user-booking');\r\n\r\n// State variables\r\nlet challengeId;\r\nlet selectedDate;\r\n\r\n\r\n// Utility Functions\r\nconst showAlert = (message) => {\r\n  alert(message);\r\n};\r\n\r\nconst updateDropdown = (dropdown, options) => {\r\n  // Clear dropdown, keep only the placeholder\r\n  while (dropdown.options.length > 1) {\r\n    dropdown.remove(1);\r\n  }\r\n\r\n  // Populate dropdown with new options\r\n  options.forEach(({ value, label }) => {\r\n    const option = document.createElement('option');\r\n    option.value = value; // Use start time (HH:mm) as the value\r\n    option.textContent = label; // Use full range as the display text\r\n    dropdown.appendChild(option);\r\n  });\r\n};\r\n\r\n\r\n//------------------- Validator Functions----------------------------\r\n\r\n// // Helper function to check if an email is valid\r\nconst isValidEmail = (email) =>\r\n  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\r\n\r\n\r\n//------------------- Initialize step 2 Function----------------------------\r\nexport const initializeStep2 = async (id, date) => {\r\n  challengeId = id;\r\n  selectedDate = date;\r\n  console.log(\r\n    `Initializing Step 2 with challengeId: ${challengeId}, date: ${selectedDate}`,\r\n  );\r\n\r\n  if (!challengeId || !selectedDate) {\r\n    console.error(\r\n      'Missing challengeId or selectedDate in Step 2 initialization',\r\n    );\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const step2RoomTitle = document.querySelector(\r\n      '#step2 .modal__content-loading',\r\n    );\r\n\r\n    // Fetch and load the room title\r\n    const { success, data } = await fetchChallengeDetails(challengeId);\r\n    if (success && data.title) {\r\n      step2RoomTitle.textContent = data.title;\r\n    } else {\r\n      step2RoomTitle.textContent = 'Room Title Not Found';\r\n    }\r\n    await loadParticipants(challengeId);\r\n    await loadAvailableTimes(challengeId, selectedDate);\r\n    showSteps(2); // Move to Step 2\r\n  } catch (err) {\r\n    console.error('Error initializing Step 2:', err);\r\n  }\r\n};\r\n\r\n//--------------------FETCH AND DISPLAY PARTICIPANTS NUMBER-----------------\r\n\r\n// Load participants dropdown based on challenge details\r\nconst loadParticipants = async (challengeId) => {\r\n  try {\r\n    const { success, data, error } = await fetchChallengeDetails(challengeId);\r\n    if (success) {\r\n      const { minParticipants, maxParticipants } = data;\r\n      console.log(\r\n        'minParticipants:',\r\n        minParticipants,\r\n        'maxParticipants:',\r\n        maxParticipants,\r\n      );\r\n      populateParticipantsDropdown(minParticipants, maxParticipants);\r\n    } else {\r\n      console.error('Failed to load participants:', error);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error loading participants:', err);\r\n  }\r\n};\r\n\r\n// Populate participants dropdown\r\nconst populateParticipantsDropdown = (minParticipants, maxParticipants) => {\r\n  if (!minParticipants || !maxParticipants) {\r\n    console.error('Invalid participant range');\r\n    return;\r\n  }\r\n  for (let i = minParticipants; i <= maxParticipants; i++) {\r\n    const option = document.createElement('option');\r\n    option.value = i.toString();\r\n    option.textContent = `${i} participant${i > 1 ? 's' : ''}`;\r\n    participantsDropdown.appendChild(option);\r\n  }\r\n  console.log('type of participants:', typeof minParticipants);\r\n};\r\n\r\n//-----------------------FETCH AND DISPLAY AVAILABLE SLOTS----------------\r\n\r\nconst loadAvailableTimes = async (challengeId, selectedDate) => {\r\n  try {\r\n    const {\r\n      success,\r\n      data: slots,\r\n      error,\r\n    } = await fetchAvailableTimes(challengeId, selectedDate);\r\n    if (success) {\r\n      const timeRanges = slots.map((slot) => {\r\n        // Parse start time into hours and minutes\r\n        const [hours, minutes] = slot.split(':').map(Number);\r\n\r\n        // Calculate end time (90 minutes later)\r\n        const endTime = new Date();\r\n        endTime.setHours(hours);\r\n        endTime.setMinutes(minutes + 90);\r\n\r\n        // Format end time as HH:mm\r\n        const endHours = String(endTime.getHours()).padStart(2, '0');\r\n        const endMinutes = String(endTime.getMinutes()).padStart(2, '0');\r\n        const formattedEndTime = `${endHours}:${endMinutes}`;\r\n\r\n        // Return an object with start time and range\r\n        return {\r\n          value: slot, // Start time (HH:mm)\r\n          label: `${slot} - ${formattedEndTime}`, // Full time range\r\n        };\r\n      });\r\n\r\n      // Update dropdown with the new time ranges\r\n      updateDropdown(timeDropdown, timeRanges);\r\n    } else {\r\n      console.error('Failed to load available times:', error);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error loading available times:', err);\r\n  }\r\n};\r\n\r\n//---------------------VALIDATE EMAIL AND NAME------------------\r\n\r\nconst validateEmail = (event) => {\r\n  const isValid = isValidEmail(event.target.value);\r\n  event.target.setCustomValidity(\r\n    isValid ? '' : 'Please enter a valid email address.',\r\n  );\r\n};\r\n\r\nconst validateName = (event) => {\r\n  const trimmedName = event.target.value.trim();\r\n  if (trimmedName.length === 0) {\r\n    event.target.setCustomValidity(\r\n      'Name should not be empty or contain only spaces.',\r\n    );\r\n  } else if (!/^[a-zA-Z\\s]{2,}$/.test(trimmedName)) {\r\n    event.target.setCustomValidity(\r\n      'Please enter a valid name (letters only, at least 2 characters).',\r\n    );\r\n  } else {\r\n    event.target.setCustomValidity('');\r\n  }\r\n};\r\n\r\n//--------------------- FORM SUBMITION-----------------------------\r\n\r\nconst handleFormSubmission = async (event) => {\r\n  event.preventDefault();\r\n  // Validate name before submission\r\n\r\n  console.log('Selected Date:', selectedDate);\r\n  console.log('Challenge ID:', challengeId);\r\n  const nameValue = nameInput.value.trim();\r\n  if (nameValue.length === 0) {\r\n    nameInput.setCustomValidity('Name should not be empty.');\r\n    nameInput.reportValidity();\r\n    return; // Stop submission\r\n  } else {\r\n    nameInput.setCustomValidity(''); // Clear validation message\r\n  }\r\n  // Validate email before submission\r\n  const emailValue = emailInput.value.trim();\r\n  if (!isValidEmail(emailValue)) {\r\n    emailInput.setCustomValidity('Please enter a valid email address.');\r\n    emailInput.reportValidity();\r\n    return; // Stop submission\r\n  } else {\r\n    emailInput.setCustomValidity(''); // Clear validation message\r\n  }\r\n\r\n  if (!selectedDate || !challengeId) {\r\n    showAlert('Missing challenge ID or selected date.');\r\n    return; // Stop submission\r\n  }\r\n\r\n  // Extract form data\r\n  const reservationData = {\r\n    challengeId,\r\n    name: nameValue,\r\n    email: emailValue,\r\n    date: selectedDate,\r\n    time: form['selected_time'].value,\r\n    participants: parseInt(form['selected_participants'].value, 10),\r\n  };\r\n\r\n  // console.log('Reservation Data:', reservationData);\r\n\r\n  try {\r\n    // Send reservation request\r\n    const { success, data, error } = await createReservation(reservationData);\r\n\r\n    if (success) {\r\n      console.log('Reservation created successfully:', data);\r\n      nameInput.value = '';\r\n      emailInput.value = '';\r\n      timeDropdown.selectedIndex = 0; // Reset to placeholder\r\n      participantsDropdown.selectedIndex = 0;\r\n\r\n      showSteps(3);\r\n      //------------------------------------------------------\r\n      // you need to put logic to go to the thank you part from Ronja\r\n      //-------------------------------------------------------\r\n    } else {\r\n      console.error('Failed to create reservation:', error);\r\n      showAlert('Failed to create reservation. Please try again.');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error creating reservation:', err);\r\n    showAlert('An unexpected error occurred. Please try again.');\r\n  }\r\n};\r\n\r\n//------------------ADDEVENTLISTENERS--------------------\r\n\r\n// Load participants and available times on DOMContentLoaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  emailInput.addEventListener('input', validateEmail);\r\n  nameInput.addEventListener('input', validateName);\r\n});\r\n\r\nif (!form._hasSubmitListener) {\r\n  form.addEventListener('submit', handleFormSubmission);\r\n  form._hasSubmitListener = true;\r\n}\r\n","import { fetchAvailableTimes, fetchChallengeDetails } from \"./apiService.js\";\r\nimport \"../styles/layouts/modal.scss\";\r\nimport { initializeStep2 } from './modal-step-2.js';\r\n\r\n// DOM Selectors\r\nconst modal = document.querySelector(\".booking-modal\");\r\nconst steps = document.querySelectorAll(\".booking-modal__step\");\r\nconst dateInput = document.querySelector(\".custom__date\");\r\nconst roomTitle = document.querySelector(\".modal__content-loading\");\r\nconst searchAvailableTimesBTN = document.querySelector(\".booking__search-btn\");\r\nconst closeBTN = document.querySelectorAll('.close');\r\n\r\nlet challengeId; \r\n\r\n// to set the minimum selectable date to tomorrow\r\nconst setMinimumSelectableDate = () => {\r\n  const today = new Date();\r\n  today.setDate(today.getDate() + 1); // Tomorrow\r\n  const minDate = today.toISOString().split('T')[0]; // Format as YYYY-MM-DD\r\n  dateInput.setAttribute('min', minDate); // Set as the minimum date\r\n};\r\n\r\n\r\nexport const showSteps = (stepNumber) => {\r\n  const steps = document.querySelectorAll(\".booking-modal__step\");\r\n  steps.forEach((step, index) => {\r\n    if (index + 1 === stepNumber) {\r\n      step.style.display = \"block\"; // Show the active step\r\n      step.classList.add(\"booking-modal__step--active\");\r\n    } else {\r\n      step.style.display = \"none\"; \r\n      step.classList.remove(\"booking-modal__step--active\");\r\n    }\r\n  });\r\n};\r\n\r\n// Fetch and display the room title\r\nexport const loadRoomTitle = async (challengeId) => {\r\n  try {\r\n    const { success, data } = await fetchChallengeDetails(challengeId);\r\n    if (success && data.title) {\r\n      roomTitle.textContent = data.title;\r\n    } else {\r\n      roomTitle.textContent = \"Room Title Not Found\";\r\n    }\r\n  } catch (err) {\r\n    roomTitle.textContent = \"Error Loading Room Title\";\r\n    console.error(\"Error loading room title:\", err);\r\n  }\r\n};\r\n\r\n// Event listener for the \"Search Available Times\" button in Step 1\r\nsearchAvailableTimesBTN.addEventListener(\"click\", async (event) => {\r\n  event.preventDefault();\r\n\r\n  const selectedDate = dateInput.value; \r\n  if (!selectedDate) {\r\n    alert(\"Please select a valid date.\");\r\n    dateInput.focus();\r\n    return;\r\n  }\r\n\r\n  if (!challengeId) {\r\n    console.error(\"Error: challengeId is undefined.\");\r\n    return;\r\n  }\r\n\r\n  // Pass `challengeId and selectedDate directly to initialize Step 2\r\n  await initializeStep2(challengeId, selectedDate);\r\n});\r\n\r\n// Function to open the booking modal (Step 1 initialization)\r\nexport const openBookingModal = (id) => {\r\n  challengeId = id;\r\n  if (!challengeId) {\r\n    console.error(\"No challengeId provided to openBookingModal\");\r\n    return;\r\n  }\r\n\r\n  modal.style.display = \"block\";\r\n  console.log(`Modal is displayed for challengeId: ${challengeId}`);\r\n  loadRoomTitle(challengeId);\r\n  showSteps(1); \r\n};\r\n\r\n// Hide the modal on page load\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  modal.style.display = \"none\";\r\n  console.log(\"Modal is hidden when the page is loaded\");\r\n\r\n  setMinimumSelectableDate();\r\n});\r\n\r\ncloseBTN.forEach(button =>{\r\n    button.addEventListener('click', () => {\r\n        const modal = button.closest('.booking-modal');\r\n        modal.style.display = 'none';\r\n    });\r\n});","import'../styles/layouts/rooms.scss';\r\nimport {openBookingModal} from './modal1.js'\r\nclass Challenge {\r\n  constructor(\r\n    id,\r\n    title,\r\n    description,\r\n    type,\r\n    minParticipants,\r\n    maxParticipants,\r\n    rating,\r\n    image,\r\n    labels,\r\n  ) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.description = description;\r\n    this.type = type;\r\n    this.minParticipants = minParticipants;\r\n    this.maxParticipants = maxParticipants;\r\n    this.rating = rating;\r\n    this.image = image;\r\n    this.labels = labels;\r\n  }\r\n\r\n  createChallengeStars() {\r\n    // Drawing a stars\r\n    const rate = this.rating;\r\n    const challengeRating = document.createElement(\"div\");\r\n    challengeRating.className = \"challenge__ratings\"\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const star = new Image();\r\n\r\n      if (i <= Math.floor(rate)) {\r\n        star.src = \"assets/svg/star-filled.svg\";\r\n        star.className = \"star filled\";\r\n      } else if (i === Math.ceil(rate) && rate % 1 !== 0) {\r\n        star.src = \"assets/svg/star-half.svg\";\r\n        star.className = \"star half\";\r\n      } else {\r\n        star.src = \"assets/svg/star.svg\";\r\n        star.className = \"star unfilled\";\r\n      }\r\n\r\n      challengeRating.appendChild(star);\r\n    }\r\n    return challengeRating;\r\n  }\r\n\r\n  createBookChallengeBtn() {\r\n      const bookingBtn = document.createElement(\"button\");\r\n      bookingBtn.className = \"challenge__btn\";\r\n  \r\n      if (this.type === \"onsite\") {\r\n          bookingBtn.textContent = \"Book this room\";\r\n          bookingBtn.addEventListener('click', () => openBookingModal(this.id)); \r\n      } else if (this.type === \"online\") {\r\n          bookingBtn.textContent = \"Take challenge online\";\r\n          bookingBtn.addEventListener('click', () => openBookingModal(this.id)); \r\n      }\r\n      return bookingBtn;\r\n    }\r\n\r\n  createChallengeCard(btn) {\r\n    const liItem = document.createElement(\"li\");\r\n    liItem.id = \"challenges__carousel__slide\" + this.id;\r\n    liItem.setAttribute('tabindex', 0);\r\n    liItem.className = \"challenge__slide challengey challenges\";\r\n\r\n    const imageContainer = document.createElement(\"div\");\r\n    imageContainer.className = \"challenge__image-container\"\r\n\r\n    const img = document.createElement(\"img\");\r\n    img.className = \"challenge__img\";\r\n    img.src = this.image;\r\n    img.alt = this.description;\r\n    img.loading = \"lazy\";\r\n    imageContainer.appendChild(img);\r\n\r\n    const detailsContainer = document.createElement(\"div\");\r\n    detailsContainer.className = \"challenge__details\";\r\n\r\n\r\n    const title = document.createElement(\"h2\");\r\n    title.className = \"challenge__details__title_temporary\";\r\n    title.textContent = this.title + (this.type === \"onsite\" ? \" (onsite)\" : \"\");\r\n\r\n    const detailsInfo = document.createElement(\"div\");\r\n    detailsInfo.className = \"challenge__details-info\";\r\n\r\n    const rating = this.createChallengeStars();\r\n\r\n    const challengeParticipants = document.createElement(\"div\");\r\n    challengeParticipants.className = \"challenge__participants\";\r\n    challengeParticipants.textContent = `${this.minParticipants} - ${this.maxParticipants} participants`;\r\n    if (this.type === \"online\") {\r\n      challengeParticipants.textContent += \" (networked)\";\r\n    }\r\n    imageContainer.appendChild(rating);\r\n    detailsInfo.appendChild(challengeParticipants);\r\n    \r\n    \r\n    const challengeDescription = document.createElement(\"p\");\r\n    challengeDescription.className = \"challenge__description\"\r\n    challengeDescription.textContent = this.description;\r\n    \r\n    detailsContainer.appendChild(title);\r\n\r\n    if (this.labels && this.labels.length > 0) {\r\n      const labels = this.createLabels();\r\n      detailsContainer.appendChild(labels); \r\n    }\r\n    detailsContainer.appendChild(detailsInfo);\r\n    detailsContainer.appendChild(challengeDescription);\r\n    \r\n    if(btn){\r\n      detailsContainer.appendChild(this.createBookChallengeBtn());\r\n    }\r\n    \r\n    const typeIcon = document.createElement(\"span\");\r\n    typeIcon.className = \"challenge__type-icon\";\r\n    \r\n    if (this.type === \"online\") {\r\n      typeIcon.textContent = \"💻\"; \r\n    } else if (this.type === \"onsite\") {\r\n      typeIcon.textContent = \"🏠\"; \r\n    }\r\n    imageContainer.appendChild(typeIcon);\r\n    \r\n    \r\n    liItem.appendChild(imageContainer);\r\n    liItem.appendChild(detailsContainer);\r\n    \r\n    return liItem;\r\n  }\r\n  createLabels() {\r\n    const labelsContainer = document.createElement(\"div\");\r\n    labelsContainer.className = \"challenge__labels\";\r\n\r\n    this.labels.forEach(label => {\r\n      const labelItem = document.createElement(\"span\");\r\n      labelItem.className = \"challenge__label\";\r\n      labelItem.textContent = `*${label} `; \r\n      labelsContainer.appendChild(labelItem);\r\n    });\r\n\r\n    return labelsContainer;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Challenge;","import Challenge from '../challengeClass.js';\r\n\r\nexport const renderChallenges = (challenges, container, withButtons = true) => {\r\n   \r\n    container.innerHTML = '';\r\n  \r\n  \r\n    challenges.forEach((challengeData) => {\r\n      const challenge = new Challenge(\r\n        challengeData.id,\r\n        challengeData.title,\r\n        challengeData.description,\r\n        challengeData.type,\r\n        challengeData.minParticipants,\r\n        challengeData.maxParticipants,\r\n        challengeData.rating,\r\n        challengeData.image,\r\n        challengeData.labels\r\n      );\r\n  \r\n      // Create the card element\r\n      const challengeCard = challenge.createChallengeCard(withButtons);\r\n  \r\n      // Append the card to the container\r\n      container.appendChild(challengeCard);\r\n    });\r\n  };"],"names":["menuItems","hamburger","menu","backgroundOverlay","createNavMenuItem","item","menuList","link","createCloseBtn","closeBtn","span1","span2","handleToggleMenu","handleCloseMenu","e","onlineButton","onsiteButton","BASE_URL","isValidDate","dateString","date","isValidTime","timeString","isDateAtLeastTomorrow","today","tomorrow","validateReservationInput","challengeId","name","email","time","participants","fetchApi","url","requestOptions","res","errorText","error","fetchAllChallenges","challenges","fetchAvailableTimes","slots","fetchChallengeDetails","success","challengeDetails","challenge","err","createReservation","reservationData","emailInput","nameInput","timeDropdown","participantsDropdown","form","selectedDate","showAlert","message","updateDropdown","dropdown","options","value","label","option","isValidEmail","initializeStep2","id","step2RoomTitle","data","loadParticipants","loadAvailableTimes","showSteps","minParticipants","maxParticipants","populateParticipantsDropdown","i","timeRanges","slot","hours","minutes","endTime","endHours","endMinutes","formattedEndTime","validateEmail","event","isValid","validateName","trimmedName","handleFormSubmission","nameValue","emailValue","modal","dateInput","roomTitle","searchAvailableTimesBTN","closeBTN","setMinimumSelectableDate","minDate","stepNumber","step","index","loadRoomTitle","openBookingModal","button","Challenge","title","description","type","rating","image","labels","rate","challengeRating","star","bookingBtn","btn","liItem","imageContainer","img","detailsContainer","detailsInfo","challengeParticipants","challengeDescription","typeIcon","labelsContainer","labelItem","renderChallenges","container","withButtons","challengeData","challengeCard"],"mappings":"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"}